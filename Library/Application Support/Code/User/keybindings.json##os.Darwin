// Place your key bindings in this file to override the defaults
[
  // fix with suggestion
  // ctrl + .
  {
    "key": "ctrl+[Period]",
    "command": "editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "alt+cmd+[Period]",
    "command": "-editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },

  // copy to clipboardd
  // ctrl + shift + c
  {
    "key": "shift+cmd+c",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "cmd+c",
    "command": "-editor.action.clipboardCopyAction"
  },

  // cut to clipboard
  // ctrl + shift + x
  {
    "key": "shift+cmd+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "shift+cmd+x",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "cmd+x",
    "command": "-editor.action.clipboardCutAction"
  },

  // open new window
  // ctrl + shift + alt + n
  {
    "key": "shift+cmd+alt+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },

  // create new file
  // ctrl + shift + n
  {
    "key": "shift+cmd+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },

  // open recent projects
  // ctrl + shift + r
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },

  // open file
  // ctrl + p
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },

  // paste from clipboard
  // ctrl + shift + v
  {
    "key": "shift+cmd+v",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "cmd+v",
    "command": "-editor.action.clipboardPasteAction"
  },

  // select all
  // ctrl + shift + a
  {
    "key": "ctrl+shift+a",
    "command": "-cursorLineStartSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "cmd+a",
    "command": "-editor.action.selectAll"
  },

  // show all commands
  // ctrl + shift + p
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },

  // copy to clipboard from terminal
  // ctrl + shift + c
  {
    "key": "shift+cmd+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "cmd+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },

  // open new terminal
  // ctrl + shift + ~
  {
    "key": "ctrl+shift+[Backslash]",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+[Backslash]",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },

  // find in terminal
  // ctrl + shift + f
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "cmd+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },

  // focus terminal when not in focus
  // ctrl + ~
  {
    "key": "ctrl+[Backslash]",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+down",
    "command": "-workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },

  // unfocus terminal when in focus
  // ctrl + ~
  {
    "key": "ctrl+[Backslash]",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },

  // close focused terminal
  // ctrl + w
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },

  // select all in terminal
  // ctrl + shift + a
  {
    "key": "shift+cmd+a",
    "command": "workbench.action.terminal.selectAll",
    "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "cmd+a",
    "command": "-workbench.action.terminal.selectAll",
    "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },

  // toggle line comment
  // ctrl + shift + 7
  {
    "key": "ctrl+shift+7",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+7",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },

  // trigger suggestions
  // ctrl + shift + space
  {
    "key": "ctrl+shift+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },

  // undo
  // ctrl + shift + z
  {
    "key": "shift+cmd+z",
    "command": "undo"
  },
  {
    "key": "cmd+z",
    "command": "-undo"
  },

  // reset zoom
  // ctrl + numpad0
  {
    "key": "ctrl+numpad0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "cmd+numpad0",
    "command": "-workbench.action.zoomReset"
  },

  // focus explorer view
  // ctrl + shift + e
  {
    "key": "ctrl+shift+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },

  // collapse folders in explorer view when opened
  // ctrl + shift + e
  {
    "key": "ctrl+shift+e",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletFocus"
  },

  // focus source control
  // ctrl + shift + g
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },

  // zoom in
  // ctrl + +
  {
    "key": "ctrl+[BracketLeft]",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "ctrl+numpad_add",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+0",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+numpad_add",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+[BracketLeft]",
    "command": "-workbench.action.zoomIn"
  },

  // zoom out
  // ctrl + -
  {
    "key": "ctrl+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "ctrl+numpad_subtract",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+numpad_subtract",
    "command": "-workbench.action.zoomOut"
  },

  // save all files
  // ctrl + s
  {
    "key": "cmd+s",
    "command": "saveAll"
  },
  {
    "key": "alt+cmd+s",
    "command": "-saveAll"
  },

  // close all editors
  // ctrl + shift + w
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+w",
    "command": "openEditors.closeAll"
  },

  // git checkout branch
  // ctrl + shift + h
  {
    "key": "ctrl+shift+h",
    "command": "git.checkout"
  }

  // untracked keybindings
]
